# Convert Font Awesome and Material Design icons to a C compatible format

#   Font Awesome source:
#       id:         file-o
#       unicode:    f016
#   output:
#       #define ICON_FA_FILE_O u8"\uf016"

#   Material Design source:
#       3d_rotation e84d
#   output:
#       #define ICON_MD_3D_ROTATION u8"\ue84d"

# Added min and max unicode fonts ICON_MIN and ICON_MAX
#   output:
#       #define ICON_MIN_FA 0xf000

# Dependencies:
#   Python 2.7 - https://www.python.org/download/releases/2.7/
#   Requests - http://docs.python-requests.org/
#   PyYAML - http://pyyaml.org/


import requests
import yaml

font_line_format = '#define ICON_{!s}_{!s} u8"\u{!s}"\n'
minmax_line_format = '#define ICON_{!s}_{!s} 0x{!s}\n'

def get_prelude( url ):
	prelude = '// Generated by GenerateIconFontCHeaders.py \n// from {!s}\n#pragma once\n\n'.format( url )
	return prelude

# Convert Font Awesome
url = 'https://raw.githubusercontent.com/FortAwesome/Font-Awesome/master/src/icons.yml'
icon_name = 'FA'
output_file = 'IconsFontAwesome.h'

try:
	response = requests.get( url, timeout = 2 )
	if response.status_code == 200:
		input = yaml.safe_load( response.content )
		unicode_min = 'ffff'
		unicode_max = '0000'
		output = ''
		for item in input[ 'icons' ]:
			font = ''
			for char in item[ 'id' ]:
				font += '_' if ( char == '-' ) else str.upper( char )
			unicode = item[ 'unicode' ]
			if unicode < unicode_min:
				unicode_min = unicode
			elif unicode >= unicode_max:
				unicode_max = unicode
			output += font_line_format.format( icon_name, font , unicode )
		output_range = get_prelude( url ) + \
						minmax_line_format.format( 'MIN', icon_name, unicode_min ) + \
						minmax_line_format.format( 'MAX', icon_name, unicode_max ) + \
						output
		with open( output_file, 'w' ) as f:
			f.write( output_range )
		print( 'Font Awesome icons - conversion success: {!s}'.format( output_file ))
except Exception as e:
	print( 'Font Awesome icons - error \n\t{!s}'.format( e ))

# Convert Material Design
url = 'https://raw.githubusercontent.com/google/material-design-icons/master/iconfont/codepoints'
icon_name = 'MD'
output_file = 'IconsMaterialDesign.h'

try:
	response = requests.get( url, timeout = 2 )
	if response.status_code == 200:
		input = str.split( response.content, '\n' )
		unicode_min = 'ffff'
		unicode_max = '0000'
		output = ''
		for line in input:
			words = str.split( line )
			if words:
				font = ''
				for char in words[ 0 ]:
					font += '_' if ( char == '-' ) else str.upper( char )
				unicode = words[ 1 ]
				if unicode < unicode_min:
					unicode_min = unicode
				elif unicode >= unicode_max:
					unicode_max = unicode
			output += font_line_format.format( icon_name, font , unicode )
		output_range = get_prelude( url ) + \
						minmax_line_format.format( 'MIN', icon_name, unicode_min ) + \
						minmax_line_format.format( 'MAX', icon_name, unicode_max ) + \
						output
		with open( output_file, 'w' ) as f:
			f.write( output_range )
		print( 'Material Design icons - conversion success: {!s}'.format( output_file ))
except Exception as e:
	print( 'Material Design icons - error \n\t{!s}'.format( e ))
